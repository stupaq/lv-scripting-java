package stupaq.scripting;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.win32.StdCallLibrary;
import java.nio.ByteBuffer;
/**
 * JNA Wrapper for library <b>scripting</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface ScriptingLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "scripting";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(ScriptingLibrary.JNA_LIBRARY_NAME);
	public static final ScriptingLibrary INSTANCE = (ScriptingLibrary)Native.loadLibrary(ScriptingLibrary.JNA_LIBRARY_NAME, ScriptingLibrary.class);
	/**
	 * CreateFormula<br>
	 * Original signature : <code>void CreateFormula(char[])</code><br>
	 * <i>native declaration : scripting.h:11</i><br>
	 * @deprecated use the safer methods {@link #CreateFormula(java.nio.ByteBuffer)} and {@link #CreateFormula(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void CreateFormula(Pointer viPath);
	/**
	 * CreateFormula<br>
	 * Original signature : <code>void CreateFormula(char[])</code><br>
	 * <i>native declaration : scripting.h:11</i>
	 */
	void CreateFormula(ByteBuffer viPath);
	/**
	 * Original signature : <code>MgErr LVDLLStatus(char*, int, void*)</code><br>
	 * <i>native declaration : scripting.h:13</i><br>
	 * @deprecated use the safer methods {@link #LVDLLStatus(java.nio.ByteBuffer, int, com.sun.jna.Pointer)} and {@link #LVDLLStatus(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ScriptingLibrary.MgErr LVDLLStatus(Pointer errStr, int errStrLen, Pointer module);
	/**
	 * Original signature : <code>MgErr LVDLLStatus(char*, int, void*)</code><br>
	 * <i>native declaration : scripting.h:13</i>
	 */
	ScriptingLibrary.MgErr LVDLLStatus(ByteBuffer errStr, int errStrLen, Pointer module);
	public static class MgErr extends PointerType {
		public MgErr(Pointer address) {
			super(address);
		}
		public MgErr() {
			super();
		}
	};
}
